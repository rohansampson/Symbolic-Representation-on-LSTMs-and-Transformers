import numpy as np
np.random.seed(0)
import sys
sys.path.append('./../..')
from forecaster import forecaster
from VanillaLSTM_keras import VanillaLSTM_keras
from util import myfigure
from ABBA import ABBA
import matplotlib as mpl
import time
mpl.rcParams.update(mpl.rcParamsDefault)

ts=[349,349,347,351,347,347,347,347,351,348,348,347,349,347,348,346,347,347,347,347,346,346,351,346,349,348,349,352,347,352,347,347,347,345,349,347,348,346,348,348,351,346,347,118,347,118,118,117,119,120,120,117,117,117,117,120,120,120,119,119,119,121,118,121,120,120,119,120,3060,120,3025,3022,3048,3034,3048,3048,3099,3099,3099,3095,3019,3095,3095,3083,3019,3019,3027,3083,3083,3016,3016,3016,3016,122,118,122,122,118,118,118,120,253,120,120,241,235,242,234,233,234,228,233,229,233,231,231,231,235,231,232,229,231,229,232,229,232,231,232,225,229,225,225,228,225,225,228,231,230,230,228,230,231,228,228,228,233,225,225,225,224,225,224,225,223,227,223,225,227,225,229,227,229,225,228,225,227,225,228,228,225,222,221,222,394,392,391,391,391,391,392,392,380,378,380,374,374,374,381,374,374,381,379,371,379,379,379,377,371,372,372,376,376,371,372,372,374,371,372,380,379,374,374,374,376,374,372,376,375,375,375,375,376,372,376,372,372,372,375,372,377,375,372,374,370,374,378,370,378,378,378,378,378,378,379,378,378,375,375,375,369,371,369,371,375,371,371,376,375,370,370,369,370,370,370,369,372,369,366,374,369,374,372,369,372,395,413,395,395,425,421,424,424,423,421,425,419,421,421,421,431,421,419,423,419,419,423,423,421,420,421,423,423,421,423,421,424,423,416,424,422,416,416,426,419,426,419,426,422,422,422,422,416,424,416,426,417,422,417,417,417,417,419,416,415,416,416,422,416,416,424,412,417,412,417,426,412,423,414,414,423,416,423,416,415,419,415,419,414,421,414,414,417,417,415,417,411,420,411,417,415,420,420,419,414,419,419,414,416,413,413,415,415,414,413,411,416,411,413,411,413,415,412,415,410,411,410,412,410,412,417,411,408,408,412,408,408,411,410,412,413,414,412,410,412,409,416,409,411,415,411,411,414,417,414,414,412,419,412,409,412,409,409,411,412,411,411,412,416,412,412,413,416,417,413,416,416,416,409,413,416,416,416,408,419,408,416,408,416,413,411,413,411,411,411,406,410,406,408,416,408,409,411,416,416,408,409,410,415,410,410,405,405,412,416,412,413,411,413,408,415,408,404,414,404,405,405,412,411,411,411,411,408,404,411,411,405,408,405,405,405,403,409,403,410,406,410,406,406,406,406,403,412,403,402,406,402,408,402,408,403,404,403,409,406,404,405,408,404,408,408,408,404,405,405,405,405,406,405,403,412,403,406,409,406,409,405,409,409,409,405,405,405,409,409,410,409,402,410,404,410,403,405,405,409,403,409,409,408,405,408,411,406,411,399,394,399,399,404,403,404,408,404,408,406,404,410,409,402,409,409,404,401,408,401,401,401,401,405,399,405,405,403,403,403,403,411,406,411,265,268,265,268,266,268,264,267,264,264,270,268,265,265,267,265,265,267,267,266,272,272,274,264,274,274,266,268,268,268,266,273,266,268,269,268,268,272,276,272,267,267,267,270,2606,270,2514,2501,2606,2606,2486,2486,2520,2465,2520,2520,2468,2496,2496,2488,2488,2488,2488,2522,2488,2471,2475,2471,2517,2472,2517,2517,2495,2497,2471,2471,2543,2485,2543,2543,2543,2474,2485,2485,2474,2478,2474,2510,2510,2540,2516,2540,2477,2517,2477,2538,2538,2538,2538,2538,2538,2538,2475,2503,2475,2480,2533,2480,2480,2539,2483,2539,2539,2543,2474,2483,2543,2532,2532,2498,2532,2511,2498,2473,2511,2529,2529,2519,2529,2541,2519,364,2541,2541,364,364,364,364,364,364,364,359,364,364,364,360,359,359,2484,2474,2481,2481,2479,2474,2479,2517,2486,2472,2467,2471,2471,2467,2474,2484,2474,2484,359,363,359,359,359,363,363,358,360,358,358,363,367,363,363,363,363,2488,363,2483,2477,2488,2531,2477,2531,2528,2477,2479,2543,2479,2543,2542,361,2509,357,359,357,357,363,365,363,363,361,357,361,364,366,364,359,360,358,358,358,358,2475,2468,2483,2526,2468,2526,2479,2479,2479,361,2479,365,364,365,364,359,364,357,365,357,358,363,358,363,363,357,363,356,2544,363,2480,2497,2480,2460,2508,2513,2472,2508,2469,358,2477,357,365,357,360,360,360,357,358,357,357,357,357,358,357,358,359,361,359,359,2484,364,2472,364,2523,2472,2486,2523,2533,2498,2498,2476,2472,2476,2476,2476,366,360,360,360,360,364,358,364,364,365,361,365,365,363,363,363,363,363,361,360,361,356,356,360,360,356,357,356,2488,2515,2515,2537,2638,2537,2537,2638,2675,2642,2708,2708,519,521,519,519,522,517,522,522,521,524,521,521,524,522,524,517,518,523,534,523,534,551,542,548,567,567,2713,2708,2700,2713,2680,2700,2762,2698,2698,561,560,561,523,512,523,523,507,512,512,525,525,525,525,614,634,610,610,627,627,627,627,650,627,627,627,650,654,654,2865,654,654,2850,2865]

train = ts[600:900]
test = ts[900:1000]

colors=['#0072BD', '#D95319', '#EDB120', '#7E2F8E', '#77AC30', '#4DBEEE', '#A2142F']

# NUMERIC
t0 = time.time()
f = forecaster(train, model=VanillaLSTM_keras(lag=50), abba=None)
f.train(patience=10, max_epoch=100000)
prediction = f.forecast(100).tolist()
t1 = time.time()
print('time:', t1 - t0)

fig, (ax1) = myfigure(nrows=1, ncols=1, fig_ratio=0.71, fig_scale=1/0.6)
ax1.plot(train, color=colors[0], label='training')
ax1.plot(np.arange(300, 400), prediction[0:100], color=colors[1], linestyle='dashed', label='forecast')
ax1.plot(np.arange(300, 400), test, color=colors[2], label='truth')
ax1.legend(loc=3)
mpl.pyplot.savefig('HouseTwenty_numeric.pdf', dpi=300, transparent=True)

# SYMBOLIC
t0 = time.time()
abba = ABBA(max_k=3)
f = forecaster(train, model=VanillaLSTM_keras(lag=5), abba=abba)
f.train(patience=10, max_epoch=100000)
prediction = f.forecast(100).tolist()
t1 = time.time()
print('time:', t1 - t0)

fig, (ax2) = myfigure(nrows=1, ncols=1, fig_ratio=0.71, fig_scale=1/0.6)
ax2.plot(train, color=colors[0], label='training')
ax2.plot(np.arange(300, 400), prediction[0:100], color=colors[1], linestyle='dashed', label='forecast')
ax2.plot(np.arange(300, 400), test, color=colors[2], label='truth')
ax2.legend(loc=3)
mpl.pyplot.savefig('HouseTwenty_symbolic.pdf', dpi=300, transparent=True)
